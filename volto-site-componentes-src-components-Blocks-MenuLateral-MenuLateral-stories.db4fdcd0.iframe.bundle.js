"use strict";(self.webpackChunk_plone_volto=self.webpackChunk_plone_volto||[]).push([[4416],{"../../../packages/volto-site-componentes/src/components/Blocks/MenuLateral/MenuLateral.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},EditMode:function(){return EditMode},EmptyMenu:function(){return EmptyMenu},NoTitle:function(){return NoTitle},WithActiveItem:function(){return WithActiveItem},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_View__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../../packages/volto-site-componentes/src/components/Blocks/MenuLateral/View.jsx"),react_redux__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../../node_modules/.pnpm/react-redux@8.1.2_@types+react-dom@18.3.7_@types+react@18.3.23__@types+react@18.3.23_react-do_obuanppmdhunhdkx73zfrljf4m/node_modules/react-redux/es/index.js"),redux_mock_store__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../../node_modules/.pnpm/redux-mock-store@1.5.4/node_modules/redux-mock-store/lib/index.js"),react_router_dom__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../../node_modules/.pnpm/react-router@5.2.0_react@18.2.0/node_modules/react-router/esm/react-router.js"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;const mockStore=(0,redux_mock_store__WEBPACK_IMPORTED_MODULE_3__.c)([]);__webpack_exports__.default={title:"Blocks/MenuLateral",component:_View__WEBPACK_IMPORTED_MODULE_1__.c,parameters:{layout:"padded"}};const mockMenuItems=[{"@id":"/home",Title:"Home",getURL:"/","@type":"Document"},{"@id":"/sobre",Title:"Sobre Nós",getURL:"/sobre","@type":"Document"},{"@id":"/servicos",Title:"Serviços",getURL:"/servicos","@type":"Document"},{"@id":"/contato",Title:"Contato",getURL:"/contato","@type":"Document"}],createStoreWithItems=(items=mockMenuItems,currentPath="/")=>{const store=mockStore({router:{location:{pathname:currentPath}},search:{subrequests:{menuLateral:{items:items}}}}),originalDispatch=store.dispatch;return store.dispatch=action=>(originalDispatch(action),Promise.resolve()),store},Template=args=>__jsx(react_redux__WEBPACK_IMPORTED_MODULE_2__.Provider,{store:args.store||createStoreWithItems()},__jsx(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.wF,{initialEntries:[args.currentPath||"/"]},__jsx(_View__WEBPACK_IMPORTED_MODULE_1__.c,args))),Default=Template.bind({});Default.args={data:{title:"Menu de Navegação",caminho:"/site"},isEditMode:!1,store:createStoreWithItems()};const WithActiveItem=Template.bind({});WithActiveItem.args={data:{title:"Menu de Navegação",caminho:"/site"},isEditMode:!1,currentPath:"/servicos",store:createStoreWithItems(mockMenuItems,"/servicos")};const EditMode=Template.bind({});EditMode.args={data:{title:"Menu de Navegação",caminho:"/site"},isEditMode:!0,store:createStoreWithItems()};const NoTitle=Template.bind({});NoTitle.args={data:{caminho:"/site"},isEditMode:!1,store:createStoreWithItems()};const EmptyMenu=Template.bind({});EmptyMenu.args={data:{title:"Menu Vazio",caminho:"/site"},isEditMode:!1,store:createStoreWithItems([])};const __namedExportsOrder=["Default","WithActiveItem","EditMode","NoTitle","EmptyMenu"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Provider store={args.store || createStoreWithItems()}>\n    <MemoryRouter initialEntries={[args.currentPath || '/']}>\n      <MenuLateralView {...args} />\n    </MemoryRouter>\n  </Provider>",...Default.parameters?.docs?.source}}},WithActiveItem.parameters={...WithActiveItem.parameters,docs:{...WithActiveItem.parameters?.docs,source:{originalSource:"args => <Provider store={args.store || createStoreWithItems()}>\n    <MemoryRouter initialEntries={[args.currentPath || '/']}>\n      <MenuLateralView {...args} />\n    </MemoryRouter>\n  </Provider>",...WithActiveItem.parameters?.docs?.source}}},EditMode.parameters={...EditMode.parameters,docs:{...EditMode.parameters?.docs,source:{originalSource:"args => <Provider store={args.store || createStoreWithItems()}>\n    <MemoryRouter initialEntries={[args.currentPath || '/']}>\n      <MenuLateralView {...args} />\n    </MemoryRouter>\n  </Provider>",...EditMode.parameters?.docs?.source}}},NoTitle.parameters={...NoTitle.parameters,docs:{...NoTitle.parameters?.docs,source:{originalSource:"args => <Provider store={args.store || createStoreWithItems()}>\n    <MemoryRouter initialEntries={[args.currentPath || '/']}>\n      <MenuLateralView {...args} />\n    </MemoryRouter>\n  </Provider>",...NoTitle.parameters?.docs?.source}}},EmptyMenu.parameters={...EmptyMenu.parameters,docs:{...EmptyMenu.parameters?.docs,source:{originalSource:"args => <Provider store={args.store || createStoreWithItems()}>\n    <MemoryRouter initialEntries={[args.currentPath || '/']}>\n      <MenuLateralView {...args} />\n    </MemoryRouter>\n  </Provider>",...EmptyMenu.parameters?.docs?.source}}}}}]);